on: 
  workflow_call:
    inputs:
      packageName:
        required: true
        type: string
      packagePath:
        required: false
        type: string
      runUnitTests:
        required: true
        type: boolean
      runIntegrationTests:
        required: true
        type: boolean
    secrets:
      patToken:
        required: false
      patUsername:
        required: false

jobs:
  build_and_publish_nuget_package_job:
    runs-on: ubuntu-20.04
    steps:
      - name: Prepare build parameters
        id: prepare-build
        run: |
          if [[ "${{ inputs.packagePath }}" == "" ]]; then
            packagePath=./${{ inputs.packagePath }}.Package
          else
            packagePath=./${{ inputs.packageName }}
          fi
          echo "Using package path: $packagePath"
          echo '::echo::on' 
          echo "PACKAGE_PATH=$packagePath" >> $GITHUB_OUTPUT

      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Setup .NET Core @ Latest
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          source-url: https://nuget.pkg.github.com/UBCO-Bikes/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.patToken}}

      - name: Run unit tests
        if: ${{ inputs.runUnitTests }}
        run: |  
          cd ${{ steps.prepare-build.outputs.PACKAGE_PATH }}
          dotnet test ./${{ inputs.packageName }}.UnitTests

      - name: Run integration tests
        if: ${{ inputs.runIntegrationTests }}
        run: |  
          cd ${{ steps.prepare-build.outputs.PACKAGE_PATH }}
          docker-compose -f ./docker-compose.yml up --build --force-recreate --exit-code-from integration-tests
        env:
          PAT_TOKEN: ${{secrets.patToken}}
          PAT_USERNAME: ${{secrets.patUsername}}

      - name: Generate & publish NuGet package
        run: |  
          cd ${{ steps.prepare-build.outputs.PACKAGE_PATH }}
          dotnet pack -c Release -o out  
          dotnet nuget push ./out/*.nupkg --no-symbols --skip-duplicate
